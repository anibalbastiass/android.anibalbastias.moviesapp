buildscript {
    apply from: "android.anibalbastias.dependencies/scripts/build/dependencies.gradle"

    repositories {
        jcenter()
        google()
        mavenCentral()
    }

    dependencies {
        classpath deps.classpath.gradle
        classpath deps.classpath.kotlin
        classpath deps.classpath.navigation
        classpath deps.classpath.daggerHilt
    }
}

allprojects {
    // For avoid duplicated @Experimental annotations in the project
    tasks.withType(org.jetbrains.kotlin.gradle.tasks.KotlinCompile).all {
        kotlinOptions {
            freeCompilerArgs += [
                    "-Xuse-experimental=kotlin.ExperimentalUnsignedTypes",
                    "-Xuse-experimental=kotlinx.coroutines.ExperimentalCoroutinesApi",
                    "-Xuse-experimental=kotlinx.coroutines.InternalCoroutinesApi",
                    "-Xuse-experimental=androidx.compose.animation.ExperimentalAnimationApi",
                    "-Xuse-experimental=androidx.compose.ExperimentalComposeApi",
                    "-Xuse-experimental=androidx.compose.material.ExperimentalMaterialApi",
                    "-Xuse-experimental=androidx.compose.runtime.ExperimentalComposeApi",
                    "-Xuse-experimental=androidx.compose.ui.ExperimentalComposeUiApi",
                    "-Xuse-experimental=androidx.constraintlayout.compose.ExperimentalMotionApi",
                    "-Xuse-experimental=androidx.paging.ExperimentalPagingApi",
                    "-Xuse-experimental=androidx.compose.foundation.ExperimentalFoundationApi",
                    "-Xuse-experimental=androidx.compose.material3.windowsizeclass.ExperimentalMaterial3WindowSizeClassApi",
                    "-Xuse-experimental=coil.annotation.ExperimentalCoilApi",
                    "-Xuse-experimental=kotlinx.serialization.ExperimentalSerializationApi",
                    "-Xuse-experimental=com.google.accompanist.pager.ExperimentalPagerApi"
            ]
        }
    }
}

task clean(type: Delete) {
    delete rootProject.buildDir
}

def credentialsProperties = new Properties()
if (file("$rootDir/credentials.properties").exists()) {
    file("$rootDir/credentials.properties").withInputStream { credentialsProperties.load(it) }
}
ext.credentialsProperties = credentialsProperties